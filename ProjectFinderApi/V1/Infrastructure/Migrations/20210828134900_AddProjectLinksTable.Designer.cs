// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectFinderApi.V1.Infrastructure;

namespace ProjectFinderApi.V1.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210828134900_AddProjectLinksTable")]
    partial class AddProjectLinksTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ProjectFinderApi.V1.Infrastructure.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Category")
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("category");

                    b.Property<string>("Dependencies")
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("dependencies");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Phase")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("phase");

                    b.Property<string>("Priority")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("priority");

                    b.Property<string>("ProductUsers")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("product_users");

                    b.Property<string>("ProjectContact")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("project_contact");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("project_name");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("size");

                    b.HasKey("Id");

                    b.ToTable("pf_project");
                });

            modelBuilder.Entity("ProjectFinderApi.V1.Infrastructure.ProjectLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("link");

                    b.Property<string>("LinkTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("link_title");

                    b.Property<int>("ProjectId")
                        .HasMaxLength(16)
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("pf_project_links");
                });

            modelBuilder.Entity("ProjectFinderApi.V1.Infrastructure.ProjectMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ProjectId")
                        .HasMaxLength(16)
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.Property<string>("ProjectRole")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("project_role");

                    b.Property<int>("UserId")
                        .HasMaxLength(16)
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("pf_project_members");
                });

            modelBuilder.Entity("ProjectFinderApi.V1.Infrastructure.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("pf_user");
                });

            modelBuilder.Entity("ProjectFinderApi.V1.Infrastructure.ProjectLink", b =>
                {
                    b.HasOne("ProjectFinderApi.V1.Infrastructure.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectFinderApi.V1.Infrastructure.ProjectMember", b =>
                {
                    b.HasOne("ProjectFinderApi.V1.Infrastructure.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectFinderApi.V1.Infrastructure.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
